name: Terraform
on:
  repository_dispatch:
    types: do-somethingpush:
    paths-ignore:
      - README.md
      - .gitignore
  pull_request:
    types:
      - closed
    branches:
      - 'main'
env:
  environment: stag 
permissions:
  contents: read
defaults:
  run:
    shell: bash

jobs:
  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      # Checkout to current repository
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TERRAFORMAPI }}
          terraform_wrapper: false

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: |
          terraform init
          terraform validate
  terraform-plan:
    needs: terraform-validate
    runs-on: ubuntu-latest
    steps:
      # Checkout to current repository
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: terraform-plan
        run: |
          terraform init
          terraform validate
          terraform plan -out -input=false
  terraform-apply:
      needs: [terraform-validate, terraform-plan]
      runs-on: ubuntu-latest
      if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      environment:
        name: Terraform-apply
      steps:
        # Checkout to current repository
        - name: Checkout
          uses: actions/checkout@v3
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
        - name: terraform-apply
          run: |
            terraform init
            terraform validate
            terraform apply -var "environment=${{ env.environment }}" --auto-approve
            echo "Apply completed successfully..."
